# 1.创建Fluentd服务账号
apiVersion: v1
kind: ServiceAccount
metadata:
  # 指定账号名称
  name: kube-fluentd-sa
  # 绑定名称空间
  namespace: kube-efk-ns
  labels:
    k8s-app: fluentd
---
# 2.创建Fluentd集群角色
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # 指定角色名称
  name: kube-fluentd-role
  labels:
    k8s-app: fluentd
rules:
  - apiGroups:
      - ""
    resources:
      - "namespaces"
      - "pods"
    verbs:
      - "get"
      - "watch"
      - "list"
---
# 3.角色绑定
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # 指定角色绑定名称
  name: kube-fluentd-rolebind
  labels:
    k8s-app: fluentd
# 绑定的服务账号
subjects:
  - kind: ServiceAccount
    name: kube-fluentd-sa
    namespace: kube-efk-ns
    apiGroup: ""
# 绑定的角色
roleRef:
  kind: ClusterRole
  name: kube-fluentd-role
  apiGroup: ""
---
# 4.创建Fluentd数据配置
kind: ConfigMap
apiVersion: v1
metadata:
  # 指定名称
  name: kube-fluentd-cm
  # 绑定命名空间
  namespace: kube-efk-ns
  labels:
    k8s-app: fluentd
# 日志数据配置
data:
  system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
    </system>
  containers.input.conf: |-
    <source>
      @id fluentd-containers.log
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/es-containers.log.pos
      tag raw.kubernetes.*
      read_from_head true
      <parse>
        @type multi_format
        <pattern>
          format json
          time_key time
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
        <pattern>
          format /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
          time_format %Y-%m-%dT%H:%M:%S.%N%:z
        </pattern>
      </parse>
    </source>
    
    # 在日志输出中检测异常，并将其作为一条日志转发
    <match raw.kubernetes.**>
      @id raw.kubernetes
      @type detect_exceptions
      remove_tag_prefix raw
      message log
      stream stream
      multiline_flush_interval 5
      max_bytes 500000
      max_lines 1000
    </match>

    # 合并多行日志
    <filter **>
      @id filter_concat
      @type concat
      key log
      use_first_timestamp true
      multiline_end_regexp /\n$/
      separator ""
    </filter>

    # 使用K8s元数据丰富日志数据
    <filter kubernetes.**>
      @id filter_kubernetes_metadata
      @type kubernetes_metadata
    </filter>

    # 修复ES中JSON解析问题
    <filter kubernetes.**>
      @id filter_parser
      @type parser
      key_name log
      reserve_data true
      remove_key_name_field true
      <parse>
        @type multi_format
        <pattern>
          format json
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </filter>

  system.input.conf: |-
    <source>
      @id journald-docker
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "docker.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-docker.pos
      </storage>
      read_from_head true
      tag docker
    </source>

    <source>
      @id journald-container-runtime
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "{{ fluentd_container_runtime_service }}.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-container-runtime.pos
      </storage>
      read_from_head true
      tag container-runtime
    </source>

    <source>
      @id journald-etcd
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "etcd.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-etcd.pos
      </storage>
      read_from_head true
      tag etcd
    </source>

    <source>
      @id journald-kube-apiserver
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "kube-apiserver.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-kube-apiserver.pos
      </storage>
      read_from_head true
      tag kube-apiserver
    </source>

    <source>
      @id journald-kube-controller-manager
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "kube-controller-manager.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-kube-controller-manager.pos
      </storage>
      read_from_head true
      tag kube-controller-manager
    </source>

    <source>
      @id journald-kube-scheduler
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "kube-scheduler.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-kube-scheduler.pos
      </storage>
      read_from_head true
      tag kube-scheduler
    </source>

    <source>
      @id journald-kubelet
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "kubelet.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-kubelet.pos
      </storage>
      read_from_head true
      tag kubelet
    </source>

    <source>
      @id journald-kube-proxy
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "kube-proxy.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-kube-proxy.pos
      </storage>
      read_from_head true
      tag kube-proxy
    </source>

    <source>
      @id journald-node-problem-detector
      @type systemd
      matches [{ "_SYSTEMD_UNIT": "node-problem-detector.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/journald-node-problem-detector.pos
      </storage>
      read_from_head true
      tag node-problem-detector
    </source>

    <source>
      @id kernel
      @type systemd
      matches [{ "_TRANSPORT": "kernel" }]
      <storage>
        @type local
        persistent true
        path /var/log/kernel.pos
      </storage>
      <entry>
        fields_strip_underscores true
        fields_lowercase true
      </entry>
      read_from_head true
      tag kernel
    </source>

  forward.input.conf: |-
    # TCP请求日志
    <source>
      @id forward
      @type forward
    </source>

  output.conf: |-
    <match **>
      @id elasticsearch
      @type elasticsearch
      @log_level info
      type_name _doc
      include_tag_key true
      # ES服务名称
      host kube-es-svc
      # ES端口
      port 9200
      logstash_format true
      # 设置日志索引前缀为k8s
      logstash_prefix k8s
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.system.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>
---
# 5.部署Fluentd
apiVersion: apps/v1
kind: DaemonSet
metadata:
  # 指定部署名称
  name: kube-fluentd-ds
  # 绑定命名空间
  namespace: kube-efk-ns
  labels:
    k8s-app: fluentd
spec:
  selector:
    matchLabels:
      k8s-app: fluentd
  template:
    metadata:
      labels:
        k8s-app: fluentd
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      priorityClassName: system-node-critical
      # 绑定服务账户名称
      serviceAccountName: kube-fluentd-sa
      # 容器配置
      containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1.15.3-debian-elasticsearch7-1.0
          env:
            - name: FLUENTD_ARGS
              value: --no-supervisor -q
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              memory: 500Mi
          volumeMounts:
            - name: var-log
              mountPath: /var/log
            - name: var-lib-docker-containers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: config-volume
              mountPath: /etc/fluent/config.d
      terminationGracePeriodSeconds: 30
      volumes:
        - name: var-log
          hostPath:
            path: /var/log
        - name: var-lib-docker-containers
          hostPath:
            path: /var/lib/docker/containers
        - name: config-volume
          # 绑定的configMap名称
          configMap:
            name: kube-fluentd-cm